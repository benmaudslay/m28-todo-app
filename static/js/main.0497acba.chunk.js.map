{"version":3,"sources":["components/Form.jsx","components/Date.jsx","components/Item.jsx","components/List.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","props","useState","userInput","setUserInput","onSubmit","event","preventDefault","console","log","handleForm","type","value","onChange","e","target","Date","todoDate","className","toLocaleString","Item","checked","handleChecked","handleDelete","date","undefined","name","id","onClick","List","todos","map","element","index","App","setTodos","newTodo","tempArr","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAwBeA,EAtBF,SAACC,GACZ,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAUA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAMC,iBAENC,QAAQC,IAAI,0BACZR,EAAMS,WAAWP,GACjBC,EAAa,KAIb,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAaU,EAAEC,OAAOH,aCXhCI,G,MAPF,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEX,OACI,mBAAGC,UAAU,OAAb,SAAqBD,EAASE,qBCsBvBC,EAtBF,SAAC,GAA2D,IAAzDR,EAAwD,EAAxDA,MAAOS,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KAC3D,OACE,qBAAIN,UAAS,sBAAiBG,EAAU,eAAYI,GAApD,UACE,sBAAKP,UAAU,gBAAf,UACE,4BAAIN,IACJ,sBAAKM,UAAU,gBAAf,UACE,uBACEP,KAAK,WACLO,UAAU,eACVQ,KAAK,GACLC,GAAG,GACHN,QAASA,EACTR,SAAUS,IAEZ,mBAAGJ,UAAU,mBAAmBU,QAASL,EAAzC,gCAGJ,cAAC,EAAD,CAAMN,SAAUO,QCCPK,EAnBF,SAAC5B,GACZ,OACE,6BACGA,EAAM6B,MAAMC,KAAI,SAACC,EAASC,GACzB,OACE,cAAC,EAAD,CACErB,MAAOoB,EAAQpB,MACfS,QAASW,EAAQX,QAEjBG,KAAMQ,EAAQR,KACdD,aAAc,kBAAMtB,EAAMsB,aAAaU,IACvCX,cAAe,kBAAMrB,EAAMqB,cAAcW,KAHpCA,SCiDFC,EAvCH,WACV,MAA0BhC,mBAAS,IAAnC,mBAAO4B,EAAP,KAAcK,EAAd,KAyBA,OACE,sBAAKjB,UAAU,cAAf,UACE,2CACA,cAAC,EAAD,CAAMR,WA1BS,SAAC0B,GAClBD,EAAS,GAAD,mBACHL,GADG,CAEN,CACElB,MAAOwB,EACPf,SAAS,EACTG,KAAM,IAAIR,YAqBZ,cAAC,EAAD,CACEc,MAAOA,EACPR,cAlBgB,SAACW,GACrB,IAAII,EAAO,YAAOP,GAClBO,EAAQJ,GAAOZ,SAAWgB,EAAQJ,GAAOZ,QACzCc,EAASE,IAgBLd,aAbe,SAACU,GACpB,IAAII,EAAO,YAAOP,GAClBO,EAAQC,OAAOL,EAAO,GACtBE,EAASE,UC/BEE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0497acba.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst Form = (props) => {\n  const [userInput, setUserInput] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    console.log(\"The form was submitted\");\n    props.handleForm(userInput);\n    setUserInput(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n      />\n    </form>\n  );\n};\n\nexport default Form;\n","const Date = ({todoDate}) => {\n    // let date = `${todoDate.getHours()}:${todoDate.getMinutes()}:${todoDate.getSeconds()} on ${}`\n    return (\n        <p className=\"date\">{todoDate.toLocaleString()}</p>\n    )\n}\n\nexport default Date","import \"./Item.css\";\nimport Date from \"./Date\"\n\nconst Item = ({ value, checked, handleChecked, handleDelete, date }) => {\n  return (\n    <li className={`itemWrapper ${checked ? \"checked\" : undefined}`}>\n      <div className=\"itemContainer\">\n        <p>{value}</p>\n        <div className=\"actionWrapper\">\n          <input\n            type=\"checkbox\"\n            className=\"actionButton\"\n            name=\"\"\n            id=\"\"\n            checked={checked}\n            onChange={handleChecked}\n          />\n          <p className=\"actionButton bin\" onClick={handleDelete}>☠️</p>\n        </div>\n      </div>\n      <Date todoDate={date} />\n    </li>\n  );\n};\n\nexport default Item;\n","import Item from \"./Item\";\n\nconst List = (props) => {\n  return (\n    <ul>\n      {props.todos.map((element, index) => {\n        return (\n          <Item \n            value={element.value} \n            checked={element.checked} \n            key={index} \n            date={element.date}\n            handleDelete={() => props.handleDelete(index)}\n            handleChecked={() => props.handleChecked(index)} \n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default List;\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\n\n/** AIMS\n * Add todo items to a todo list\n * Display todo list\n * Mark completed items\n * Delete items\n **/\n\n/** COMPONENTS\n * Input Form for the todos\n * List component to show todos\n * List item component for each todo\n */\n\n// CRUD - create, read, update & delete\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n\n  const handleForm = (newTodo) => {\n    setTodos([\n      ...todos,\n      {\n        value: newTodo,\n        checked: false,\n        date: new Date(),\n      },\n    ]);\n  };\n\n  const handleChecked = (index) => {\n    let tempArr = [...todos];\n    tempArr[index].checked = !tempArr[index].checked;\n    setTodos(tempArr);\n  };\n\n  const handleDelete = (index) => {\n    let tempArr = [...todos];\n    tempArr.splice(index, 1)\n    setTodos(tempArr);\n  };\n\n  return (\n    <div className=\"app-wrapper\">\n      <h1>Todo List</h1>\n      <Form handleForm={handleForm} />\n      <List\n        todos={todos}\n        handleChecked={handleChecked}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n\n// const func = (param) => {\n\n// }\n\n// func()\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}